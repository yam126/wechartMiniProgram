@{
    ViewBag.Title = "Index";
    Layout = null;
}
<script src="~/Scripts/jquery-1.8.2.min.js"></script>
<script src="~/Scripts/base64.js"></script>
<script src="~/Scripts/jweixin-1.0.0.js"></script>
<script type="text/javascript">
    wx.config({
        beta: true, // 开启内测接口调用，注入wx.invoke方法,非常重要!!必须有这个        
        debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
        appId: '@ViewBag.js_json.appId', // 必填，公众号的唯一标识
        timestamp: '@ViewBag.js_json.timeStamp', // 必填，生成签名的时间戳
        nonceStr: '@ViewBag.js_json.nonceStr', // 必填，生成签名的随机串
        signature: '@ViewBag.js_json.paySign',// 必填，签名，见附录1
        jsApiList: [                //需要调用的接口，都得在这里面写一遍
        "openWXDeviceLib",//初始化设备库（只支持蓝牙设备）
        "closeWXDeviceLib",//关闭设备库（只支持蓝牙设备）
        "getWXDeviceInfos",//获取设备信息（获取当前用户已绑定的蓝牙设备列表）
        "sendDataToWXDevice",//发送数据给设备
        "startScanWXDevice",//扫描设备（获取周围所有的设备列表，无论绑定还是未被绑定的设备都会扫描到）
        "stopScanWXDevice",//停止扫描设备
        "connectWXDevice",//连接设备
        "disconnectWXDevice",//断开设备连接
        "getWXDeviceTicket",//获取操作凭证

        //下面是监听事件：
        "onWXDeviceBindStateChange",//微信客户端设备绑定状态被改变时触发此事件
        "onWXDeviceStateChange",//监听连接状态，可以监听连接中、连接上、连接断开
        "onReceiveDataFromWXDevice",//接收到来自设备的数据时触发
        "onScanWXDeviceResult",//扫描到某个设备时触发
        "onWXDeviceBluetoothStateChange",//手机蓝牙打开或关闭时触发
        ]
    });
    wx.ready(function () {
        // 初始化设备库函数gh_9d291a1e3ca6_ba77d0d618bf075b
        my_openWXDeviceLib('gh_9d291a1e3ca6');
        //wx.invoke('openWXDeviceLib', { 'brandUserName': 'gh_9d291a1e3ca6' }, function (res) {
        // alert(res.err_msg);
        //});
        //bus.conn();
        bus.conn();
        //设备连接状态改变
        wx.on('onWXDeviceStateChange', function (res) {
            //有3个状态：connecting连接中,connected已连接,unconnected未连接
            //每当手机和设备之间的状态改变的瞬间，会触发一次
            //alert(res.err_msg);
            $("#lbInfo").html(res.deviceId + "===" + res.state);
            if (res.state == "disconnected") {
                bus.conn();
            };
        });
        
        //wx.on('onScanWXDeviceResult', function (res) {
        //    //alert(res.devices[0].deviceId);
        //    //回调
        //});

      
        //wx.on('onScanWXDeviceResult', function (res) {
        //    alert(res.devices.length);
        //    //自己解析一下res，里面会有deviceid,扫描设备的目的就是为了得到这个
        //    //然后就可以开始绑定了
        //});
        //wx.invoke("startScanWXDevice", { "btVersion": "ble" }, function (res) { });
        wx.invoke('getWXDeviceInfos', { "deviceId": 'gh_9d291a1e3ca6_ba77d0d618bf075b' }, function (res) {
            
            var len = res.deviceInfos.length;  //绑定设备总数量
            
            for (i = 0; i <= len - 1; i++) {
                //alert(i + ' ' + res.deviceInfos[i].deviceId + ' ' +res.deviceInfos[i].state); 
                $("#lbdeviceid").html(res.deviceInfos[i].deviceId);
                if (res.deviceInfos[i].state === "connected") {
                    $("#lbdeviceid").html(res.deviceInfos[i].deviceId);
                    //C_DEVICEID = res.deviceInfos[i].deviceId;
                    $("#lbdeviceid").html("2.设备已成功连接");
                    $("#lbdeviceid").css({ color: "green" });
                    // 发送设置命令
                    
                    bus.sendOpenID();
                    break;
                }
            }

        });
        
        wx.on('onReceiveDataFromWXDevice', function (argv) {
            $("#pmsg").html(base64decode(argv.base64Data));
           
            var content = base64decode(argv.base64Data);
            var dyseed = 4;//state.LowLimitMinVoltage;
            var dyMax = 400;//state.LowLimitMaxVoltage;
            
            var lst = content.split('&');
            //$("#pmsg").html(lst);
           
            if (lst.length > 8) {
                $.each(lst, function () {
                    var prefix = this.substr(0, 4);
                    if (this[4] == '0') {
                        //console.log(this);
                        var valStr = this.substr(5);


                        var num = 0;
                        if (prefix == '0111') {
                            num = parseFloat(valStr);
                            // byId('para_hum').innerText = num;
                        } else if (prefix == '0112') {
                            num = parseFloat(valStr);
                            // byId('para_temp').innerText = num;
                        } else if (prefix == '0203') {
                            num = parseInt(valStr) / 10.0;
                            //byId('para_v_l').innerText = num;
                            if (state.OutputCurrent < 400) {
                                num = num - state.LowVoltageDrop;
                            }
                            if (num > dyMax) {
                                num = dyMax;
                            }
                            if (num < dyseed) {
                                num = dyseed;
                            }
                            //option.series[0].data[0].value = Math.round((num - dyseed) * 10000.0 / (dyMax - dyseed)) / 100.0;
                            //mileChart.setOption(option, true); 
                            $("#lbInfo").html(Math.round((num - dyseed) * 10000.0 / (dyMax - dyseed)) / 100.0);
                        } else if (prefix == '0204') {
                            num = parseInt(valStr) / 10.0;
                            //byId('para_v_h').innerText = num;
                        } else if (prefix == '0205') {
                            num = parseInt(valStr) / 100.0;
                            //byId('para_a_l').innerText = num;
                        } else if (prefix == '0206') {
                            num = parseInt(valStr) / 100.0;
                            //byId('para_a_h').innerText = num;
                        } else if (prefix == '0207') {
                            num = parseInt(valStr) / 10.0;
                            //byId('para_dc_temp').innerText = num;
                        } else if (prefix == '0209') {
                            //byId('btnOpenMap').innerText = valStr+pramaStr;
                        }
                        else if (prefix == '0210') {
                            //byId('errormsg').innerText=this.toString().substr(4,1);
                            num = parseInt(valStr);
                            //byId('para_zt').innerText = (num == 0 ? '运行' : '停止');
                        }
                        else if (prefix == '0211') {
                            //byId('errormsg').innerText=this.toString().substr(4,1);
                            num = parseInt(valStr);
                            //byId('btnOpenMap').innerText = num;
                        }
                        //console.log(prefix);
                    }
                });
            }

        });
        
    });
    //$(window).unload(function () {
    //    wx.invoke('disconnectWXDevice', { "deviceId": 'gh_9d291a1e3ca6_ba77d0d618bf075b' }, function (res) {
    //        //alert(res.err_msg);
    //        //回调
    //    });
    //    wx.invoke('closeWXDeviceLib', { "deviceId": 'gh_9d291a1e3ca6_ba77d0d618bf075b' }, function (res) {
    //        //alert(res.err_msg);
    //        //回调
    //    });
    //});

    function my_openWXDeviceLib(brandUserName){
        var x=0;         
        wx.invoke('openWXDeviceLib',  { 'brandUserName': brandUserName }, 
        function(res){
            //mlog("打开设备返回："+res.err_msg);
            //alert(res.bluetoothState);
            if(res.err_msg=='openWXDeviceLib:ok')
            {
                if(res.bluetoothState=='off')
                {    
                    //showdialog("太着急啦","亲,使用前请先打开手机蓝牙！");  
                    $("#lbInfo").innerHTML="1.请打开手机蓝牙";
                    $("#lbInfo").css({color:"red"});
                    x=1;
                    isOver();
                };
                if(res.bluetoothState=='unauthorized')
                {
                    //showdialog("出错啦","亲,请授权微信蓝牙功能并打开蓝牙！");    
                    $("#lbInfo").html("1.请授权蓝牙功能");
                    $("#lbInfo").css({color:"red"});
                    x=1;
                    isOver();
                }; 
                if(res.bluetoothState=='on')
                {
                    //showdialog("太着急啦","亲,请查看您的设备是否打开！");   
                    $("#lbInfo").html("1.蓝牙已打开,未找到设备");
                    $("#lbInfo").css({color:"red"});
                    //$("#lbInfo").attr(("style", "background-color:#000");
                    x=0;
                    //isOver();
                };      
            }
            else
            {
                $("#lbInfo").html("1.微信蓝牙打开失败");
                x=1; 
                //showdialog("微信蓝牙状态","亲,请授权微信蓝牙功能并打开蓝牙！");   
            }
        });
        return x;  //0表示成功 1表示失败
    }
   

    var bus = new function () {
        //this.getstate = function () {
        //    var state = owner.getState();
        //    state.account = data.UserName;
        //    state.name = data.Name;
        //    state.Deviceno = data.DeviceNo;
        //    state.BluetoothAddress = data.DeviceBluetoothAddress;
        //    state.LowLimitMinVoltage = data.LowLimitMinVoltage;
        //    state.LowVoltageDrop = data.LowVoltageDrop;
        //    state.OutputCurrent = data.OutputCurrent;
        //    state.OutputVoltage = data.OutputVoltage;
        //    state.LowLimitMaxVoltage = data.LowLimitMaxVoltage;
        //    state.HeighLimitMinVoltage = data.HeighLimitMinVoltage;
        //    state.LowVoltageDrop = data.LowVoltageDrop;
        //    state.InputCurrent = data.InputCurrent;

        //    state.token = data.Token;
        //};
        this.sendMsg=function(msg){
            var data = { "deviceId": 'gh_9d291a1e3ca6_ba77d0d618bf075b', "base64Data": base64encode(msg) };
            wx.invoke('sendDataToWXDevice', data, function (res) {
                $("#lbsendstate").html(res.err_msg);
                //alert(res.err_msg);
                //回调
            });
        };
        this.sendOpenID = function () {
            var msg = "openid=@ViewBag.openid";
            bus.sendMsg(msg);
        };
        this.conn = function () {
            wx.invoke('connectWXDevice', { "deviceId": 'gh_9d291a1e3ca6_ba77d0d618bf075b' }, function (res) {
                 //alert(res.err_msg);
                //回调
            });
        };
        this.scan =function(){
            wx.invoke('startScanWXDevice', { }, function (res) {
                //alert(res.err_msg);
                //回调
            });
        };
    }
    
</script>

<div id="lbInfo"></div>

<div id="lbdeviceid">

</div>
<div id="lbmsg" style="width:100%;">
    <p id="pmsg" >default,default,default,default,default,default</p>
</div>
<div id="lbsendstate">lbsendstate</div>
<style>
    .btn {
        display: block;
        /*position: relative;
        top: 5em;*/
        margin: 2em;
        width: 80%;
        height: 2em;
        line-height: 2em;
        text-align: center;
        border-radius: 5px;
        /*font-size: 20px;*/
        color: salmon;
        background-color: skyblue;
    }

    .btn-on {
        background-color: slateblue;
    }
    #setting ul li a {
display: block;
float: left;
height: 50px;
background: #3498db;
text-align: center;
padding: 30px 40px 0 40px;
position: relative;
margin: 0 10px 0 0; 

border-radius:5px;
font-size: 20px;
text-decoration: none;
color: #fff;
}


#setting ul li a:hover
{
background: #fa5ba5;
}
</style>  

<input id="senddata" type="text" value="i am tom"/>
<div id=setting>
     <ul>
      <li><a href=#>启动</a></li>
     <ul>
   <div>
<script>

    $('window').ready(function () {
        $('#setting').click(function () {
            //alert($('#senddata').val());
            bus.sendMsg($('#senddata').val());
           //bus.conn();

        });
    });
        
</script>  