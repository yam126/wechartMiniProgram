@{
    ViewBag.Title = "智裹裹列表";

}
<script type="text/javascript" src="~/Scripts/jquery-1.8.2.min.js"></script>
<script type="text/javascript" src="~/Scripts/base64.js"></script>
<script type="text/javascript" src="~/Scripts/jweixin-1.0.0.js"></script>
<script type="text/javascript">
    wx.config({
        beta: true, // 开启内测接口调用，注入wx.invoke方法,非常重要!!必须有这个
        debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
        appId: '@   fon.appId', // 必填，公众号的唯一标识
        timestamp: '@ViewBag.js_json.timeStamp', // 必填，生成签名的时间戳
        nonceStr: '@ViewBag.js_json.nonceStr', // 必填，生成签名的随机串
        signature: '@ViewBag.js_json.paySign',// 必填，签名，见附录1
        jsApiList: [                //需要调用的接口，都得在这里面写一遍
        "openWXDeviceLib",//初始化设备库（只支持蓝牙设备）
        "closeWXDeviceLib",//关闭设备库（只支持蓝牙设备）
        "getWXDeviceInfos",//获取设备信息（获取当前用户已绑定的蓝牙设备列表）
        "sendDataToWXDevice",//发送数据给设备
        "startScanWXDevice",//扫描设备（获取周围所有的设备列表，无论绑定还是未被绑定的设备都会扫描到）
        "stopScanWXDevice",//停止扫描设备
        "connectWXDevice",//连接设备
        "disconnectWXDevice",//断开设备连接
        "getWXDeviceTicket",//获取操作凭证

        //下面是监听事件：
        "onWXDeviceBindStateChange",//微信客户端设备绑定状态被改变时触发此事件
        "onWXDeviceStateChange",//监听连接状态，可以监听连接中、连接上、连接断开
        "onReceiveDataFromWXDevice",//接收到来自设备的数据时触发
        "onScanWXDeviceResult",//扫描到某个设备时触发
        "onWXDeviceBluetoothStateChange",//手机蓝牙打开或关闭时触发
        "scanQRCode",
        ]
    });
    wx.ready(function () {
        // 初始化设备库函数
        bus.open('@ViewBag.gzhid');
        bus.init();
        bus.autorefulsh();
        //bus.conn();


    });

    var bus = new function () {
        this.open = function (brandUserName) {
            wx.invoke('openWXDeviceLib', { 'brandUserName': brandUserName },
            function (res) {
                //mlog("打开设备返回："+res.err_msg);
                //alert(res.bluetoothState);
                if (res.err_msg == 'openWXDeviceLib:ok') {
                    if (res.bluetoothState == 'off') {
                        //showdialog("太着急啦","亲,使用前请先打开手机蓝牙！");
                        $(".bluestate").innerHTML = "请打开手机蓝牙";
                        $(".bluestate").css({ color: "red" });
                        x = 1;
                        isOver();
                    };
                    if (res.bluetoothState == 'unauthorized') {
                        //showdialog("出错啦","亲,请授权微信蓝牙功能并打开蓝牙！");
                        $(".bluestate").html("请授权蓝牙功能");
                        $(".bluestate").css({ color: "red" });
                        x = 1;
                        isOver();
                    };
                    if (res.bluetoothState == 'on') {
                        //showdialog("太着急啦","亲,请查看您的设备是否打开！");
                        $(".bluestate").html("蓝牙已打开");
                        $(".bluestate").css({ color: "green" });
                        //$("#lbInfo").attr(("style", "background-color:#000");
                        bus.scan();
                        //isOver();
                    };
                }
                else {
                    $(".bluestate").html("微信蓝牙打开失败");
                    x = 1;
                    //showdialog("微信蓝牙状态","亲,请授权微信蓝牙功能并打开蓝牙！");
                }
            });
        };
        this.init = function () {
            //设备连接状态改变
            //wx.on('onWXDeviceStateChange', function (res) {
            //    //有3个状态：connecting连接中,connected已连接,unconnected未连接
            //    //每当手机和设备之间的状态改变的瞬间，会触发一次
            //    //alert(res.err_msg);

            //    $(".bluestate").html(res.deviceId + "===" + res.state);
            //    if (res.state == "disconnected") {
            //        $(".bluestate").html("蓝牙已断开");
            //        $(".bluestate").css({ color: "red" });
            //         //bus.conn();
            //    };
            //    if (res.state == "connected") {
            //        $(".bluestate").html("蓝牙已连接");
            //        $(".bluestate").css({ color: "green" });
            //    };
            //    if (res.state == "unconnected") {
            //        $(".bluestate").html("蓝牙未连接");
            //        $(".bluestate").css({ color: "red" });
            //        bus.conn();
            //    };
            //});
            wx.on('onScanWXDeviceResult', function (res) {
               
                var boxlist = "";
                for (var i = 0; i < res.devices.length; i++) {
                    boxlist += "<li>" + res.devices[i].deviceId + "</li>";
                }
                refulshclear.refulshclear();
                $('.bluestate').html(boxlist);
               
            });
        };
        this.conn = function () {
            $(".bluestate").html("正在连接中...");
            $(".bluestate").css({ color: "black" });
            wx.invoke('connectWXDevice', { "deviceId": deveiceNo }, function (res) {
                //alert(res.err_msg);
                //回调
            });
        };
        this.scan = function () {
            $(".bluestate").html("扫描设备中...");
            $(".bluestate").css({ color: "black" });
            wx.invoke('startScanWXDevice', { "btVersion": "ble" }, function (res) {

            });
        };
        this.refulsh = function () {
            window.location.reload();
        };
        this.autorefulsh = function () {
            setInterval(bus.refulsh, 20000);
        };
        this.refulshclear = function () {
            clearInterval(bus.refulsh);
        };
        this.scanQRCode = function () {
            wx.scanQRCode({
                // 默认为0，扫描结果由微信处理，1则直接返回扫描结果
                needResult: 1,
                desc: 'scanQRCode desc',
                success: function (res) {
                    //扫码后获取结果参数赋值给Input
                    var url = res.resultStr;
                    //商品条形码，取","后面的
                    if (url.indexOf(",") >= 0) {
                        var tempArray = url.split(',');
                        var tempNum = tempArray[1];
                        $("#id_securityCode_input").val(tempNum);
                    } else {
                        $("#id_securityCode_input").val(url);
                    }
                }
            });
        };
    }

</script>
<style type="text/css">
    body {
        /*
            margin:0;   网页内容距离浏览器上、下、左、右边框的距离均为0
            margin:0 5px;   网页内容距离浏览器上、下边框距离为0，左、右边框距离为5px
            margin:0 10px 5px;  网页内容距离浏览器上边框距离为0，下边框距离为5px，左、右边框距离为10px
            margin:0 1px 2px 3px;   网页内容距离浏览器上、右、下、左距离分别为0、1px、2px、3px
            */
        /*padding: 0;*/ /*设置方法和margin一样*/
        font-family: 微软雅黑;
        font-size: 18px; /*设置整个页面字体（小9px 中12px 大14px）*/
        color: #000000; /*设置网页字体颜色*/
        /*background-color: #e5e5e5;*/ /*设置网页背景*/
        /*overflow: hidden;*/ /*去掉页面滚动条*/
        text-align: center;
        /*margin: 0 auto;*/
    }

    .Text_Explain_Key_Point {
        color: #000000;
        font-size: 20px;
        line-height: 150%;
    }

    .Div_Explain {
        padding-top: 40px;
        padding-left: 10px;
        text-align: left;
        float: left;
    }

    .Div_Main_Title_Image {
        width: 100%;
        text-align: center;
        margin: 0 auto;
        padding-top: 10px;
    }
</style>

<div class="Div_Main_Title_Image">
    <a href="javascript:bus.refulsh();"><img src="../images/zgg/zgg.jpg" alt="0" class="Image_Main_Title_Image" /></a>
</div>
<div class="Clear"></div>
<div><br><span id="lab_Info"></span></div>
<div class="Clear"></div>
<div class="Clear"></div>
<div class="Div_Explain">
    <span class="Text_Explain_Key_Point">点击"图标"，可刷新页面重新连接蓝牙。</span><br />
    <span class="Text_Explain_Key_Point">点击"名称"，可进行开箱门操作。</span><br />
    <span class="Text_Explain_Key_Point">点击"更多"，可进入详细设置<a href="/main/boxlist">。</a></span><br />
    <span class="Text_Explain_Key_Point">若多次连接失败，点击<a href="javascript:bus.scanQRCode();" style="color:forestgreen;">扫一扫</a>,直接扫描智裹裹上的二维码。</span><br />
</div>
<div id="collapsePay" class="panel-collapse " style="padding-bottom:2em;">
    <div class="bluestate"></div>
    <ul class="ect-list"></ul>
</div>
